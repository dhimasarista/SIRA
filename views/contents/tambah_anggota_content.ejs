<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Tambah Anggota</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item active">Tambah Anggota</li>
                </ol>
            </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <div class="content">
        <div id="tambah-anggota-card" class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header row align-items-center">
                            <div class="col"><b>Anggota Baru</b></div>
                            <div class="col text-right">
                                <button type="button" class="btn btn-sm btn-secondary" id="button-bersihkan">Bersihkan</button>
                            </div>
                        </div>
                        <div class="card-body">
                            <form>
                                <div class="form-group">
                                    <label for="nik">NIK <small style="color: red;">*Wajib Diisi</small></label>
                                    <input type="number" class="form-control" id="nik" name="nik">
                                </div>
                                <div class="form-group">
                                    <label for="nama">Nama Lengkap <small style="color: red;">*Wajib Diisi</small></label>
                                    <input type="text" class="form-control" id="nama" name="nama">
                                </div>
                                <div class="form-group">
                                    <label for="gelar">Gelar</label>
                                    <input type="text" class="form-control" id="gelar" name="gelar">
                                </div>
                                <!-- tambahkan input untuk kota lahir, tgl lahir, agama, jenis kelamin, golongan darah, suku bangsa, status pernikahan, dll. -->
                                <div class="form-group">
                                    <label for="tempat-lahir">Tempat Lahir</label>
                                    <input type="text" class="form-control" id="tempat-lahir" name="tempat-lahir">
                                </div>
                                <!-- Tanggal Lahir -->
                                <div class="form-group">
                                <label>Tanggal Lahir</label>
                                    <div class="input-group date" id="reservationdate" data-target-input="nearest">
                                        <input type="text" id="tanggal-lahir" class="form-control datetimepicker-input" data-target="#reservationdate"/>
                                        <div class="input-group-append" data-target="#reservationdate" data-toggle="datetimepicker">
                                            <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="pas-foto">Foto Pas Photo <small style="color: red;">*JPEG/JPG/PNG</small></label>
                                    <input type="file" class="form-control-file" id="pas-foto" name="foto_pas">
                                    <div id="delete-foto" hidden>
                                        <a href="#"  class="px-1 badge badge-danger" id="button-delete-foto">
                                            <i>
                                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24"><path fill="currentColor" d="M7 21q-.825 0-1.412-.587T5 19V6H4V4h5V3h6v1h5v2h-1v13q0 .825-.587 1.413T17 21H7Zm2-4h2V8H9v9Zm4 0h2V8h-2v9Z"/></svg>
                                            </i>
                                        </a>
                                        <span id="foto-filename"></span>
                                </div>
                                <div class="form-group">
                                    <label for="foto-ktp">Foto KTP <small style="color: red;">*JPEG/JPG/PNG</small></label>
                                    <input type="file" class="form-control-file" id="foto-ktp" name="foto-ktp">
                                    <div id="delete-ktp" hidden>
                                        <a href="#"  class="px-1 badge badge-danger" id="button-delete-ktp">
                                            <i>
                                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24"><path fill="currentColor" d="M7 21q-.825 0-1.412-.587T5 19V6H4V4h5V3h6v1h5v2h-1v13q0 .825-.587 1.413T17 21H7Zm2-4h2V8H9v9Zm4 0h2V8h-2v9Z"/></svg>
                                            </i>
                                        </a>
                                        <span id="ktp-filename"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="alamat">Alamat</label>
                                    <textarea class="form-control" id="alamat" name="alamat" rows="3"></textarea>
                                </div>
                                <!-- tambahkan input untuk provinsi, kota, kecamatan, desa/kelurahan, rt, rw, dan kode pos -->
                                <button type="submit" class="btn btn-primary" id="simpan-anggota-baru">Simpan</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const nik = document.getElementById("nik");
    const nama = document.getElementById("nama");
    const gelar = document.getElementById("gelar");
    const tempatLahir = document.getElementById("tempat-lahir");
    const tanggalLahir = document.getElementById("tanggal-lahir");
    const alamat = document.getElementById("alamat");
    const foto = document.getElementById("pas-foto");
    const ktp = document.getElementById("foto-ktp");
    // Upload File
    function UploadFile(file, dataname, path) {
        const formData = new FormData();
        formData.append(dataname, file);
        formData.append("filename", file.name);
        try {
            fetch(path, {
                method: "POST",
                body: formData,
            })
        } catch (error) {
            Swal.fire("Error", error.message, "error");
            console.error(error);
        }
    }
    // Handling Delete Image
    function DeleteImage(filename) {
        fetch(`/delete/image/${filename}`)
        .then(response => response.json())
        .then(results => {
            if (results.status !== 200) {
                Swal.fire({
                    title: "Error!",
                    text: results.message,
                    icon: "warning"
                })
                return 0;
            }
            Swal.fire({
                title: "Sukses",
                html: `pesan: <b>${results.message}</b>`,
                timer: 1000,
                timerProgressBar: true,
                icon: "success",
                showConfirmButton: false
            });
        })
    }
    const deleteKtp = document.getElementById("delete-ktp");
    const buttonDeleteKtp = document.getElementById("button-delete-ktp");
    const ktpFilename = document.getElementById("ktp-filename");
    ktp.addEventListener("change", (e) => {
        e.preventDefault();
        // Memeriksa Jenis File
        checkFileType(ktp.files[0], ["image/jpeg", "image/jpg", "image/png"], "format file tidak didukung! (JPEG/JPG/PNG)", ktp);
        // Memeriksa Ukuran File
        checkFileSize(ktp);
        // Jika file di acc
        UploadFile(ktp.files[0], "image", "/upload/image");
        //
        ktp.setAttribute("hidden", true);
        deleteKtp.removeAttribute("hidden");
        ktpFilename.innerText = ktp.files[0].name;
    });
    buttonDeleteKtp.addEventListener("click", (e) => {
        e.preventDefault();
        DeleteImage(ktp.files[0].name);
        ktp.removeAttribute("hidden");
        ktp.value = "";
        deleteKtp.setAttribute("hidden", true);
    })
    foto.addEventListener("change", (e) => {
        e.preventDefault();
        // Memeriksa Jenis File
        checkFileType(foto.files[0], ["image/jpeg", "image/jpg", "image/png"], "format file tidak didukung! (JPEG/JPG/PNG)", ktp);
        // Jika file di acc
        UploadFile(foto.files[0], "image", "/upload/image");
    })

    // Button menyimpan data baru
    document.getElementById("simpan-anggota-baru").addEventListener("click", (e) => {
        e.preventDefault();

        const data = {
            nik: nik.value,
            nama: nama.value,
            gelar: gelar.value,
            tempat_lahir: tempatLahir.value,
            tanggal_lahir: tanggalLahir.value,
            alamat: alamat.value,
            foto: foto.files[0] === undefined ? null : foto.files[0].name,
            ktp: ktp.files[0] === undefined ? null : ktp.files[0].name,
        }
        Swal.fire({
            title: "Apakah data sudah benar?",
            // text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Ya"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch("/tambah-anggota/baru", {
                    method: "POST",
                    body: JSON.stringify(data),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(results => {
                    if (results.status !== 200) {
                        Swal.fire({
                            title: "Error!",
                            text: results.message,
                            icon: "warning"
                        })
                        return 0;
                    }
                    Swal.fire({
                        title: "Data Tersimpan!",
                        html: `pesan: <b>${results.message}</b>`,
                        timer: 1000,
                        timerProgressBar: true,
                        icon: "success",
                        showConfirmButton: false
                    });
                    bersihkanKolomInput();
                })
                .catch(error =>{
                    console.log(error)
                })
            }
        });
    })

    // Fungsi membersihkan kolom inputan
    function bersihkanKolomInput() {
        nik.value = null;
        nama.value = null;
        gelar.value = null;
        tempatLahir.value = null;
        tanggalLahir.value = null;
        alamat.value = null;
    }

    document.getElementById("button-bersihkan").addEventListener("click", (e) => {
        e.preventDefault();

        Swal.fire({
            title: "Bersihkan Kolom Input?",
            showCancelButton: true,
            confirmButtonText: "Ya",
            }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {
                bersihkanKolomInput();
            }
        });
    });

</script>